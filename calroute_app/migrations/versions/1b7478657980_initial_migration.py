"""initial migration

Revision ID: 1b7478657980
Revises: 
Create Date: 2025-05-13 19:05:19.372503

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1b7478657980'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('google_access_token', sa.Text(), nullable=True),
    sa.Column('todoist_token', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('locations',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_table('user_habits',
    sa.Column('habit_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('habit_type', sa.String(length=50), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('habit_id')
    )
    op.create_table('raw_tasks',
    sa.Column('raw_task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('source', sa.Enum('google_calendar', 'todoist', 'manual',name='task_source'), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('imported_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.location_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('raw_task_id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('user_preferences',
    sa.Column('pref_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('max_daily_hours', sa.Float(), nullable=True),
    sa.Column('work_start_time', sa.Time(), nullable=True),
    sa.Column('work_end_time', sa.Time(), nullable=True),
    sa.Column('travel_mode', sa.Enum('car', 'bike', 'bus_train', 'walking', 'rideshare', name='travel_mode'), nullable=True),
    sa.Column('prioritization_style', sa.Enum('important_first', 'quick_wins', 'balanced', name='prioritization_style'), nullable=False),
    sa.Column('home_location_id', sa.Integer(), nullable=True),
    sa.Column('favorite_store_location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['favorite_store_location_id'], ['locations.location_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['home_location_id'], ['locations.location_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pref_id')
    )
    op.create_table('scheduled_tasks',
    sa.Column('sched_task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('raw_task_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_start_time', sa.DateTime(), nullable=True),
    sa.Column('scheduled_end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'completed', 'cancelled', name='task_status'), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('travel_eta_minutes', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.location_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['raw_task_id'], ['raw_tasks.raw_task_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sched_task_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scheduled_tasks')
    op.drop_table('user_preferences')
    op.drop_table('raw_tasks')
    op.drop_table('user_habits')
    op.drop_table('locations')
    op.drop_table('users')
    # ### end Alembic commands ###
